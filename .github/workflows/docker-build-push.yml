name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - master

jobs:
  detect-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for git diff

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Detect changed Dockerfiles and build images
        run: |
          # Get the hash of the previous successful commit
          PREVIOUS_COMMIT=$(git rev-list --no-merges -n 1 HEAD^)
          
          # Find all Dockerfiles that have changed
          changed_files=$(git diff --name-only $PREVIOUS_COMMIT HEAD)
          
          # Process each Dockerfile in the repository
          for dockerfile in $(find . -type f -name Dockerfile); do
            tool=$(basename $(dirname $(dirname "$dockerfile")))
            version=$(basename $(dirname "$dockerfile"))
            dockerfile_dir=$(dirname "$dockerfile")
            
            # Check if Dockerfile or any file in its directory has changed
            if echo "$changed_files" | grep -q "^${dockerfile_dir#./}/" || \
               echo "$changed_files" | grep -q "^${dockerfile_dir#./}/Dockerfile$"; then
              echo "Changes detected in $tool:$version, building..."
              
              # Build and push the Docker image
              docker buildx build \
                --cache-from type=registry,ref=${{ secrets.DOCKER_USERNAME }}/$tool:$version \
                --cache-to type=inline \
                --platform linux/amd64 \
                --tag ${{ secrets.DOCKER_USERNAME }}/$tool:$version \
                --push \
                -f "$dockerfile" "$dockerfile_dir"
              
              echo "Successfully built and pushed ${{ secrets.DOCKER_USERNAME }}/$tool:$version"
            else
              echo "No changes detected for $tool:$version, skipping..."
            fi
          done
